version: '2'

services:

### Applications Code Container #############################

  applications:
    container_name: crb_dock_applications
    image: tianon/true
    volumes:
      - ${APPLICATION}:${APPLICATION_LOCATION}

### Workspace Utilities Container ###########################

  workspace:
    container_name: crb_dock_workspace
    build:
      context: ./workspace
      args:
        - INSTALL_XDEBUG=${WORKSPACE_INSTALL_XDEBUG}
        - PGID=${WORKSPACE_PGID}
        - PUID=${WORKSPACE_PUID}
        - TZ=${WORKSPACE_TIMEZONE}
      dockerfile: "Dockerfile-${PHP_VERSION}"
    volumes_from:
      - applications
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    ports:
      - "${WORKSPACE_SSH_PORT}:22"
    tty: true
    networks:
      - frontend
      - backend

### PHP-FPM Container #######################################

  php-fpm:
    container_name: crb_dock_php-fpm
    build:
      context: ./php-fpm
      args:
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE}
        - INSTALL_WKHTMLTOPDF=${PHP_FPM_INSTALL_WKHTMLTOPDF}
      dockerfile: "Dockerfile-${PHP_VERSION}"
    volumes_from:
      - applications
    volumes:
      - ./php-fpm/php${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
    expose:
      - "9000"
      - "9001"
    depends_on:
      - workspace
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - backend

### Nginx Server Container ##################################

  nginx:
    container_name: crb_dock_nginx
    build:
      context: ./nginx
      args:
        - PHP_UPSTREAM=php-fpm
    volumes_from:
      - applications
    volumes:
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

### Apache Server Container #################################

  apache2:
    container_name: crb_dock_apache2
    build:
      context: ./apache2
      args:
        - PHP_SOCKET=${APACHE2_PHP_SOCKET}
    volumes_from:
      - applications
    volumes:
      - ${APACHE2_HOST_LOG_PATH}:/var/log/apache2
      - ./apache2/sites:/etc/apache2/sites-available
    ports:
      - "${APACHE2_HOST_HTTP_PORT}:80"
      - "${APACHE2_HOST_HTTPS_PORT}:443"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

### MySQL Container #########################################

  mysql:
    container_name: crb_dock_mysql
    build:
      context: ./mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${DATA_SAVE_PATH}/mysql:/var/lib/mysql
      - ./mysql/docker-entrypoint-initdb.d:/docker-entrypoint-initdb.d
    ports:
      - "${MYSQL_PORT}:3306"
    networks:
      - backend
    expose:
      - "${MYSQL_PORT}"

### MariaDB Container #######################################

  mariadb:
    container_name: crb_dock_mariadb
    build: ./mariadb
    environment:
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    volumes:
      - ${DATA_SAVE_PATH}/mariadb:/var/lib/mysql
      - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    ports:
      - "${MARIADB_PORT}:3306"
    networks:
      - backend

### Certbot Container ##################################

  certbot:
    container_name: crb_dock_certbot
    build:
      context: ./certbot
    volumes:
      - ./data/certbot/certs/:/var/certs
      - ./certbot/letsencrypt/:/var/www/letsencrypt
    environment:
      - CN="fake.domain.com"
      - EMAIL="fake.email@gmail.com"
    networks:
      - frontend

### ElasticSearch Container #################################

  elasticsearch:
    container_name: crb_dock_elasticsearch
    build: ./elasticsearch
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
      - elasticsearch-plugins:/usr/share/elasticsearch/plugins
      - ./elasticsearch/config:/usr/share/elasticsearch/config
    environment:
      - cluster.name=crbdock-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
      - xpack.security.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 512m
    ports:
      - "${ELASTICSEARCH_HOST_HTTP_PORT}:9200"
      - "${ELASTICSEARCH_HOST_TRANSPORT_PORT}:9300"
    depends_on:
      - php-fpm
    networks:
      - frontend
      - backend

### Mailcatcher ###############################################

  mailcatcher:
    container_name: crb_dock_mailcatcher
    build: ./mailcatcher
    ports:
      - "${MAILCATCHER_INCOMING_PORT}:1025"
      - "${MAILCATCHER_WEBCLIENT_PORT}:1080"
    networks:
      - frontend
      - backend

### Networks Setup ############################################

networks:
  frontend:
    driver: "bridge"
  backend:
    driver: "bridge"

### Volumes Setup #############################################

volumes:
  mysql:
    driver: local
  mariadb:
    driver: local
  elasticsearch-data:
    driver: local
  elasticsearch-plugins:
    driver: local
  elasticsearch-config:
    driver: local
  maildata:
    driver: local
  mailstate:
    driver: local
