version: '3.9'

services:

  # --------------------------------------------------------------------------
  # Workspace Utilities Container
  # --------------------------------------------------------------------------

  workspace:
    container_name: crb_dock_workspace
    build:
      context: ./workspace
      args:
        - PGID=${WORKSPACE_PGID}
        - PUID=${WORKSPACE_PUID}
        - TZ=${WORKSPACE_TIMEZONE}
    volumes:
      - ${APPLICATION}:${APPLICATION_LOCATION}
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"    
    tty: true    
    networks:      
      - internal

  # --------------------------------------------------------------------------
  # PHP-FPM Container
  # --------------------------------------------------------------------------

  php-fpm:
    container_name: crb_dock_php-fpm
    build:
      context: ./php-fpm
      args:
        - INSTALL_BCMATH=${PHP_FPM_INSTALL_BCMATH}
        - INSTALL_CALENDAR=${PHP_FPM_INSTALL_CALENDAR}
        - INSTALL_EXIF=${PHP_FPM_INSTALL_EXIF}
        - INSTALL_GD=${PHP_FPM_INSTALL_GD}
        - INSTALL_INTL=${PHP_FPM_INSTALL_INTL}
        - INSTALL_IONCUBE=${PHP_FPM_INSTALL_IONCUBE} # IonCube is not support when using PHP 8.0
        - INSTALL_LDAP=${PHP_FPM_INSTALL_LDAP}
        - INSTALL_MEMCACHED=${PHP_FPM_INSTALL_MEMCACHED}
        - INSTALL_MYSQLI=${PHP_FPM_INSTALL_MYSQLI}
        - INSTALL_MONGO=${PHP_FPM_INSTALL_MONGO}
        - INSTALL_OPCACHE=${PHP_FPM_INSTALL_OPCACHE}
        - INSTALL_PHPREDIS=${PHP_FPM_INSTALL_PHPREDIS}
        - INSTALL_SOAP=${PHP_FPM_INSTALL_SOAP}
        - INSTALL_SWOOLE=${PHP_FPM_INSTALL_SWOOLE}
        - INSTALL_TOKENIZER=${PHP_FPM_INSTALL_TOKENIZER} # Tokenizer is already included in image when using PHP 8.1
        - INSTALL_WKHTMLTOPDF=${PHP_FPM_INSTALL_WKHTMLTOPDF}
        - INSTALL_XDEBUG=${PHP_FPM_INSTALL_XDEBUG}
        - INSTALL_ZIP_ARCHIVE=${PHP_FPM_INSTALL_ZIP_ARCHIVE}
      dockerfile: "Dockerfile-${PHP_VERSION}"
    volumes:
      - ${APPLICATION}:${APPLICATION_LOCATION}
      - ${PHP_FPM_PATH}${PHP_VERSION}.ini:/usr/local/etc/php/php.ini
    expose:
      - "9000"
      - "9001"
    depends_on:
      - workspace
    extra_hosts:
      - "dockerhost:${DOCKER_HOST_IP}"
    networks:
      - internal

  # --------------------------------------------------------------------------
  # Nginx Server Container
  # --------------------------------------------------------------------------

  nginx:
    container_name: crb_dock_nginx
    build:
      context: ./nginx
    volumes:
      - ${APPLICATION}:${APPLICATION_LOCATION}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
      - ${NGINX_SITES_PATH}:/etc/nginx/sites-available
      - ${NGINX_SSL_PATH}:/etc/nginx/ssl
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443"
    depends_on:
      - workspace
    networks:
      - internal

  # --------------------------------------------------------------------------
  # MariaDB Container
  # --------------------------------------------------------------------------

  mariadb:
    container_name: crb_dock_mariadb
    build: ./mariadb
    environment:
      - MYSQL_DATABASE=${MARIADB_DATABASE}
      - MYSQL_USER=${MARIADB_USER}
      - MYSQL_PASSWORD=${MARIADB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MARIADB_ROOT_PASSWORD}
    volumes:
      - ${DATA_SAVE_PATH}/mariadb:/var/lib/mysql
      - ${MARIADB_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    depends_on:
      - workspace
    ports:
      - "${MARIADB_PORT}:3306"
    networks:
      - internal

  # --------------------------------------------------------------------------
  # Portainer
  # --------------------------------------------------------------------------

  portainer:
    container_name: crb_dock_portainer
    image: portainer/portainer-ce
    command: -H unix:///var/run/docker.sock
    ports:
      - "${PORTAINER_WEB_PORT}:9000"
      - "${PORTAINER_API_PORT}:8000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${DATA_SAVE_PATH}/portainer:/data
    depends_on:
      - workspace
    networks:      
      - internal

# --------------------------------------------------------------------------
# Networks Setup
# --------------------------------------------------------------------------

networks:  
  internal:
    driver: "bridge"
